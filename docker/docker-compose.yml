version: '3.8'

services:
  postgres:
    image: postgres:13
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db-scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      POSTGRES_DB: credit_bank
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1234
    ports:
      - 5432:5432
    networks:
      - credit-network
    healthcheck:
       test: [ "CMD-SHELL", "pg_isready -U postgres" ]
       interval: 10s
       timeout: 5s
       retries: 5

  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.4
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181
    networks:
      - credit-network
    healthcheck:
      test: [ "CMD-SHELL", "echo ruok | nc localhost 2181" ]
      interval: 10s
      timeout: 5s
      retries: 5

  kafka:
    image: confluentinc/cp-kafka:7.4.4
    depends_on:
      zookeeper:
        condition: service_healthy
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - credit-network
    healthcheck:
      test: ["CMD-SHELL", "nc -z kafka 9092 && echo \"OK\" || echo \"FAIL\""]
      interval: 10s
      timeout: 5s
      retries: 5

  calculator:
    build: ../calculator
    ports:
      - "8081:8081"
    networks:
      - credit-network

  deal:
    build: ../deal
    ports:
      - "8082:8082"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      postgres:
        condition: service_healthy
      kafka:
        condition: service_healthy
    networks:
       - credit-network

  statement:
    build: ../statement
    ports:
      - "8083:8083"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - credit-network
  
  dossier:
    build: ../dossier
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      kafka:
        condition: service_healthy
    networks:
      - credit-network

  api-gateway:
    build: ../api-gateway
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    ports:
      - "8080:8080"
    networks:
      - credit-network
  
networks:
   credit-network:
     driver: bridge

volumes:
   postgres_data:


      

